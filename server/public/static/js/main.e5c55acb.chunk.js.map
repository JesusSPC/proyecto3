{"version":3,"sources":["components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/taskManager/TaskService.js","components/taskManager/TaskForm.js","components/timer/Timer.js","components/taskManager/SingleTask.js","components/taskManager/TaskManager.js","components/taskManager/TaskStats.js","components/taskManager/TaskNews.js","components/navbarfooter/Menu.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","state","loggedInUser","nextProps","setState","objectSpread","react_default","a","createElement","className","onClick","Link","to","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","Login","TaskService","all","delete","id","concat","addTask","bio","time","frequency","updateTime","minutes","seconds","millis","timeLapsed","retrieveTime","TaskForm","tasks","placeholder","Timer","running","interval","setInterval","tick","clonedState","saveTimer","clearInterval","_handleStopClick","update","_this3","task","_id","retrievedTime","console","log","_retrievedTime$taskFo","taskFound","_this4","run","ver","zeroPad","_handleStartClick","SingleTask","timeSpent","updatedTime","timeSplited","split","i","length","join","document","addEventListener","elems","querySelectorAll","M","Collapsible","init","lib","header","icon","class","Timer_Timer","dist_default","format","created_at","deleteTask","TaskManager","allTasks","foundUser","tasksId","tasksUpdated","tasksStateCopy","toConsumableArray","href","TaskForm_TaskForm","setTasks","map","idx","key","SingleTask_SingleTask","TaskStats","TaskNews","Menu","App","userObj","fetchUser","err","Fragment","Redirect","components_navbar_Navbar","userInSession","Switch","Route","exact","path","render","TaskManager_TaskManager","TaskStats_TaskStats","TaskNews_TaskNews","Menu_Menu","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5c55acb.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:3010/api/auth',\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService.js\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"navbar nav-style blue\">\n          <ul>\n            {/* <li>\n              <h2>{this.state.loggedInUser.username}</h2>\n            </li> */}\n            <li>\n              <a onClick={this.handleLogout}>Logout</a>\n            </li>\n          </ul>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar nav-style blue\">\n            <ul>\n              <li>\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService.js'\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService.js'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","// auth/auth-service.js\nimport axios from 'axios';\n\nclass TaskService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:3010/task',\n      withCredentials: true\n    });\n  }\n\n  all = () => {\n    return this.service.get('/all')\n    .then(response => response.data)\n  }\n\n  delete = (id) => {\n    return this.service.delete(`/${id}`)\n    .then(response => response.data)\n  }\n\n  addTask = (name, bio, time, frequency) => {\n    return this.service.post('/addTask', {name, bio, time, frequency})\n    .then(response => response.data)\n  }\n\n  updateTime = (id, minutes, seconds, millis, timeLapsed) => {\n    return this.service.post(`/${id}/updateTime`, {minutes, seconds, millis, timeLapsed})\n    .then(response => response.data)\n  }\n\n  retrieveTime = (id) => {\n    return this.service.get(`/${id}/retrieveTime`)\n    .then(response => response.data)\n  }\n}\n\nexport default TaskService;","import React, { Component } from \"react\";\nimport TaskService from \"./TaskService.js\";\n\nexport default class TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", bio: \"\", time: \"\", frequency: \"\" };\n    this.service = new TaskService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const name = this.state.name;\n    const bio = this.state.bio;\n    const time = this.state.time;\n    const frequency = this.state.frequency;\n\n    if(name && bio && time){\n\n    this.service.addTask(name, bio, time, frequency)\n    .then( response => {\n        this.setState({\n            name: \"\", \n            bio: \"\",\n            time: \"\",\n            frequency: \"\"\n        });\n        this.props.tasks(response.tasks)\n    })\n    .catch(error => {\n      this.setState({\n        name: name,\n        bio: bio,\n        time: time,\n        frequency: frequency,\n        error: true\n      });\n    })\n  }\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  render() {\n    return (\n      <form className=\"task-form\" onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Name: </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Your activity...\"\n            onChange={e => this.handleChange(e)}\n          />\n        </fieldset>\n\n        <fieldset>\n          <label>Bio: </label>\n          <input\n            type=\"text\"\n            name=\"bio\"\n            value={this.state.bio}\n            onChange={e => this.handleChange(e)}\n          />\n        </fieldset>\n\n        <fieldset>\n          <label>Time: </label>\n          <input\n            type=\"number\"\n            name=\"time\"\n            value={this.state.time}\n            onChange={e => this.handleChange(e)}\n          />\n        </fieldset>\n\n        <fieldset>\n          <label>Frequency: </label>\n          <select onChange={e => this.handleChange(e)}>\n            <option name=\"frequency\" value={this.state.frequency}>Day</option>\n            <option name=\"frequency\" value={this.state.frequency}>Week</option>\n            <option name=\"frecuency\" value={this.state.frequency}>Month</option>\n          </select>\n        </fieldset>\n\n        <input type=\"submit\" value=\"New Project\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TaskService from \"../taskManager/TaskService.js\";\n\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new TaskService();\n\n    //: getInitialState() method\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      millis: 0,\n      running: false\n    };\n  }\n\n  _handleStartClick(event) {\n    if (!this.state.running) {\n      this.interval = setInterval(() => {\n        this.tick();\n      }, 100);\n      this.setState({ running: true });\n    }\n  }\n\n  _handleStopClick(event) {\n    if (this.state.running) {\n      let clonedState = { ...this.state };\n      this.props.saveTimer(clonedState);\n\n      clearInterval(this.interval);\n      this.setState({ \n      ...this.state,\n      minutes: 0,\n      seconds: 0,\n      millis: 0,  \n      running: false });\n    }\n  }\n\n  _handleResetClick(event) {\n    this._handleStopClick();\n    this.update(0, 0, 0);\n  }\n\n  tick() {\n    let millis = this.state.millis + 1;\n    let seconds = this.state.seconds;\n    let minutes = this.state.minutes;\n\n    if (millis === 10) {\n      millis = 0;\n      seconds = seconds + 1;\n    }\n\n    if (seconds === 60) {\n      millis = 0;\n      seconds = 0;\n      minutes = minutes + 1;\n    }\n\n    this.update(millis, seconds, minutes);\n  }\n\n  zeroPad(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n\n  update(millis, seconds, minutes) {\n    this.setState({\n      millis: millis,\n      seconds: seconds,\n      minutes: minutes\n    });\n  }\n\n  componentDidMount() {\n    this.service.retrieveTime(this.props.task._id)\n    .then(retrievedTime => {\n      console.log(retrievedTime)\n      let { minutes, seconds, millis } = retrievedTime.taskFound;\n      this.setState({\n      ...this.state,\n      minutes: minutes,\n      seconds: seconds,\n      millis: millis\n          });\n  })\n}\n\n  componentWillUnMount() {\n    //TODO\n  }\n\n  render() {\n    let run = this.state.running === true;\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <div className=\"title\">{this.props.ver}</div>\n        </header>\n        <main className=\"main\">\n          <div className=\"display\">\n            <div className=\"state\">{run ? \"Running\" : \"Stop\"}</div>\n            <div className=\"segments\">\n              <span className=\"mins\">{this.zeroPad(this.state.minutes)}:</span>\n              <span className=\"secs\">{this.zeroPad(this.state.seconds)} </span>\n              {/* <span className=\"millis\">.0{this.state.millis}</span> */}\n            </div>\n          </div>\n\n          <div className=\"actions\">\n            <button\n              className={\"btn start \" + (run ? \"disabled\" : \"\")}\n              onClick={() => this._handleStartClick()}\n            >\n              Start\n            </button>\n\n            <button\n              className={\"btn stop \" + (false == run ? \"disabled\" : \"\")}\n              onClick={() => this._handleStopClick()}\n            >\n              Stop\n            </button>\n\n            {/* <button\n              className={\n                \"btn reset \" +\n                (this.state.seconds > 0 && false == run ? \"\" : \"disabled\")\n              }\n              onClick={() => this._handleResetClick()}\n            >\n              Reset\n            </button> */}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Collapsible, CollapsibleItem, Icon } from \"react-materialize\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport TaskService from \"./TaskService.js\";\nimport Timer from \"../timer/Timer.js\";\nimport Moment from \"react-moment\";\n\nexport default class SingleTask extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new TaskService();\n\n    this.state = {\n      minutes: \"\",\n      seconds: \"\",\n      millis: \"\",\n      timeSpent: \"00:00\",\n      timeLapsed: \"\"\n    };\n  }\n\n  saveTimer(time) {\n    console.log(time)\n    let id = this.props.task._id;\n    let { minutes, seconds, millis } = time;\n    let timeLapsed = `${minutes}:${seconds}`;\n    console.log(minutes,seconds, timeLapsed)\n\n    this.service\n      .updateTime(id, minutes, seconds, millis, timeLapsed)\n\n      .then(task => {\n        console.log(task)\n        let minutes = task.updatedTime.minutes\n        let seconds = task.updatedTime.seconds\n        let timeLapsed = `${minutes}:${seconds}`;\n        let timeSplited = timeLapsed.split(\":\");\n        for (let i = 0; i < timeSplited.length; i++) {\n          if (timeSplited[i].length === 1) {\n            timeSplited[i] = \"0\" + timeSplited[i];\n          }\n        }\n        let timeSpent = timeSplited.join(\":\");\n\n        this.setState({\n          ...this.state,\n          minutes: minutes,\n          seconds: seconds,\n          millis: millis,\n          timeSpent: timeSpent\n        });\n      });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var elems = document.querySelectorAll(\".collapsible\");\n      var instances = M.Collapsible.init(elems, {});\n    });\n    this.service.retrieveTime(this.props.task._id).then(retrievedTime => {\n      console.log(retrievedTime);\n      let { minutes, seconds, millis, timeLapsed } = retrievedTime.taskFound;\n      let timeSplited = timeLapsed.split(\":\");\n      for (let i = 0; i < timeSplited.length; i++) {\n        if (timeSplited[i].length === 1) {\n          timeSplited[i] = \"0\" + timeSplited[i];\n        }\n      }\n      let timeSpent = timeSplited.join(\":\");\n\n      this.setState({\n        ...this.state,\n        minutes: minutes,\n        seconds: seconds,\n        millis: millis,\n        timeSpent: timeSpent\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Collapsible>\n        <CollapsibleItem\n          header={this.props.task.name}\n          icon={<i class=\"material-icons\">access_time</i>}\n        >\n          <div>\n            <p>{this.props.task.bio}</p>\n            <p>{this.props.task.time}:00</p>\n            <p>Currently: {this.state.timeSpent === \"00\" ? \"00:00\" : this.state.timeSpent}</p>\n          </div>\n          <div>\n            <Timer\n              saveTimer={time => this.saveTimer(time)}\n              time={this.state}\n              task={this.props.task}\n            ></Timer>\n            <p>\n              Created:{\" \"}\n              <Moment format=\"YYYY/MM/DD\">{this.props.task.created_at}</Moment>\n            </p>\n            <button onClick={() => this.props.deleteTask(this.props.task._id)}>\n              Delete\n            </button>\n          </div>\n        </CollapsibleItem>\n      </Collapsible>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\nimport { Modal, Button } from \"react-materialize\";\n\nimport TaskService from \"./TaskService.js\";\nimport TaskForm from \"./TaskForm.js\";\nimport Task from \"./SingleTask.js\";\n\nexport default class TaskManager extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new TaskService();\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    this.service.all().then(allTasks => {\n      this.setState({\n        ...this.state,\n        tasks: allTasks.foundUser.tasksId\n      });\n    });\n  }\n\n  deleteTask(id) {\n    this.service.delete(id).then(tasksUpdated => {\n      let tasksStateCopy = [...this.state.tasks];\n      tasksStateCopy = tasksUpdated.tasks;\n      this.setState({\n        ...this.state,\n        tasks: tasksStateCopy\n      });\n    });\n  }\n\n  setTasks(tasks) {\n    this.setState({\n      ...this.state,\n      tasks: tasks\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <a href=\"#newTask\" className=\"btn modal-trigger\">+New Project</a>\n        <Modal header=\"What you wanna do?\" id=\"newTask\">\n        <TaskForm tasks={tasks => this.setTasks(tasks)}></TaskForm>\n        </Modal>\n        {this.state.tasks.map((task, idx) => {\n          return (\n            <div className=\"task-box\" key={idx}>\n              <Task\n                deleteTask={() => this.deleteTask(task._id)}\n                task={task}\n              ></Task>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\n\nexport default class TaskStats extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TaskNews extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default class Menu extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <nav className=\"menu-footer blue\">\n            <ul>\n              <li>\n                <Link to=\"/news\">News</Link>\n              </li>\n              <li>\n                <Link to=\"/task-manager\">Tasks</Link>\n              </li>\n              <li>\n                <Link to=\"/stats\">Stats</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { Modal } from \"react-materialize\";\n\nimport \"./stylesheets/_style.scss\";\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/Navbar.js\";\nimport Signup from \"./components/auth/Signup.js\";\nimport Login from \"./components/auth/Login.js\";\nimport AuthService from \"./components/auth/AuthService.js\";\nimport TaskManager from \"./components/taskManager/TaskManager.js\";\nimport TaskStats from \"./components/taskManager/TaskStats.js\";\nimport TaskNews from \"./components/taskManager/TaskNews.js\";\nimport Menu from \"./components/navbarfooter/Menu.js\";\n\nclass App extends Component {\n  constructor(props) {  \n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/task-manager\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/task-manager\" render={() => <TaskManager getUser={this.getUser} />} />\n                <Route exact path=\"/stats\" render={() => <TaskStats getUser={this.getUser} />} />\n                <Route exact path=\"/news\" render={() => <TaskNews getUser={this.getUser} />} />\n              </Switch>\n              <Menu />\n            </header>\n          </div>\n        </React.Fragment>\n      );\n\n    } else {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          {/* <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>     \n                <Route exact path=\"/signup\" render={() => \n                <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div> */}\n\n            <div className=\"App\">\n            <header className=\"App-header\">\n            <a href=\"#signup\" className=\"btn modal-trigger\">Sign up</a>\n              <Modal header=\"Get ready to enjoy!\" id=\"signup\">\n                <Signup getUser={this.getUser} />\n              </Modal> \n            <a href=\"#login\" className=\"btn modal-trigger\">Sign in</a>\n              <Modal header=\"Sign in\" id=\"login\">\n                <Login getUser={this.getUser} />\n              </Modal> \n            </header>\n              </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}